Start the navigation stack as in note 005.

Send a goal location using `2D Nav Goal`

Observe that a static path is generated by global path planner, while the local path planner tries to follow it and avoid any dynamic obstacles
(moving and unforseen)
You might sometimes see that the global path planner (the static path) considered wrong obstacles (obstacles where there are none, misplaced
obstacles)

Once the robot reaches those "virtually" wrongly conceptualized obstacles. The robot may find it difficult to exit a room or pass through a door
in such a scenarios, hyper inflation of obstacle surfaces may also cause it to perform excessive recovery (recovery of static path, trajectory that
will take the robot to the goal location without hitting any obstacles.)

Recovery behaviour: It is initiated when the local planner finds obstacles while following the planned global path.
Recovery behaviour is a needed feature, but becuase of wrongful conceptualization of obstacles, hyper inflation of obstacle surfaces the robot
is forced to perform excessive recovery which makes it move back and forth, turn for vein.

The second observation is, when wrongfully "virtual" conceptualized "static" obstacles comes within the range of robots sensor suit, the map is
updated and the obstacles are restored to their correct position. (removed if there aren't any)

Clearing Process: Wrong obstacles are cleared as the robot is moving using its range finders.
Marking Process: Including previosly unforseen, misplaced "static" obstacles to their correct positions.
i.e. during navigation, the navigation stack will use the information gathered by the sensor suit to update the map as the robot moves and keep
updating the path to the goal.
